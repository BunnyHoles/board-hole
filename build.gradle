plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.github.ben-manes.versions' version '0.52.0'

}

group = 'bunny'
// version은 gradle.properties에서 관리
description = 'board-hole'

springBoot {
    buildInfo()  // BuildProperties 빈 생성으로 버전 정보를 런타임에 사용 가능
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

}

repositories {
    mavenCentral()
}

dependencies {

    // -- Core Spring Boot Starters --
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // Email dependencies removed - will be replaced with JWT-based email verification later
    // implementation 'org.springframework.boot:spring-boot-starter-mail'

    // -- View (Thymeleaf) --
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.2.RELEASE'

    // -- Development Tools --
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // -- Session Management (Redis) --
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis'

    // -- API Documentation (SpringDoc) --
    // noinspection VulnerableLibrariesLocal
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.12"

    // -- Null Safety (JSpecify) --
    implementation "org.jspecify:jspecify:1.0.0"

    // -- Mapping (MapStruct) --
    implementation "org.mapstruct:mapstruct:1.6.3"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.6.3"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

    // -- Lombok --
    compileOnly "org.projectlombok:lombok:1.18.40"
    annotationProcessor "org.projectlombok:lombok:1.18.40"

    // -- Database Drivers --
    runtimeOnly "com.mysql:mysql-connector-j:8.4.0"

    // -- Logging (JSON encoder, opt-in in prod) --
    implementation "net.logstash.logback:logstash-logback-encoder:8.1"

    // -- Dev only --
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // -- Actuator (Observability) --
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // -- Testing --
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:mysql'


    // -- RestAssured for E2E testing --
    testImplementation 'io.rest-assured:rest-assured:5.5.6'
    testImplementation 'io.rest-assured:json-path:5.5.6'
    testImplementation 'io.rest-assured:xml-path:5.5.6'

    // -- Testing utilities --
    testImplementation 'org.awaitility:awaitility:4.2.0'

}

tasks.named('test') {
    useJUnitPlatform()
    maxParallelForks = Runtime.runtime.availableProcessors() ?: 1
}

// Resource filtering for @project.version@ placeholder replacement
processResources {
    filesMatching('**/*.yml') {
        expand(project.properties)
    }
    filesMatching('**/*.yaml') {
        expand(project.properties)
    }
    filesMatching('**/*.properties') {
        expand(project.properties)
    }
}
