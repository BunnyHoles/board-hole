plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openrewrite.rewrite' version '7.15.0'
    id 'com.github.ben-manes.versions' version '0.52.0'
}

group = 'bunny'
version = '0.0.1-SNAPSHOT'
description = 'board-hole'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // 추가: AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // Docker Compose Support
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    
    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    
    // OpenAPI (Swagger)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.11'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.8.11'
    
    // Database
    runtimeOnly 'com.mysql:mysql-connector-j:9.4.0'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
    // Lombok + MapStruct binding (for builders)
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    // Logging - JSON encoder for prod
    implementation 'net.logstash.logback:logstash-logback-encoder:8.1'

    // OpenRewrite recipes (for automated refactoring)
    rewrite 'org.openrewrite.recipe:rewrite-spring:6.13.0'
    rewrite 'org.openrewrite.recipe:rewrite-static-analysis:2.16.0'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
    
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = "short"
    }
}

rewrite {
    activeRecipe('bunny.boardhole.refactor.dto-packages')
}

// 인코딩 강제 설정 제거 — Spring Boot 기본값 사용
