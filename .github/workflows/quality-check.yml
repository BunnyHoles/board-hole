name: Quality Check with SonarCloud

on:
  push:
    branches: [ main, develop ]
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  quality:
    name: Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # SonarCloud를 위한 전체 히스토리
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    # 로컬 품질 검사 (즉시 피드백)
    - name: Run Local Quality Checks
      run: ./gradlew qualityGate --no-daemon
    
    # Google Style 검사 (옵션)
    - name: Run Google Style Check
      if: github.event_name == 'pull_request'
      run: ./gradlew checkstyleMain -PuseGoogleStyle --no-daemon
      continue-on-error: true  # 경고만 표시
    
    # SonarCloud 분석
    - name: Run all test suites for coverage
      run: ./gradlew test integrationTest e2eTest jacocoAllTestReport --no-daemon

    - name: SonarCloud Analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./gradlew sonar --no-daemon
    
    # 품질 게이트 상태 확인
    - name: SonarQube Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    # 결과 업로드
    - name: Upload Checkstyle Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: checkstyle-report
        path: build/reports/checkstyle/
    
    - name: Upload PMD Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: pmd-report
        path: build/reports/pmd/
    
    - name: Upload SpotBugs Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: spotbugs-report
        path: build/reports/spotbugs/
    
    - name: Upload Coverage Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: build/reports/jacoco/
    
    # PR 코멘트 (PR인 경우만)
    - name: Add PR Comment
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '✅ 품질 검사 완료!\n\n' +
                  '- 📊 [SonarCloud 대시보드](https://sonarcloud.io/project/overview?id=${{ github.repository_owner }}_${{ github.event.repository.name }})\n' +
                  '- 📝 Checkstyle, PMD, SpotBugs 리포트는 Artifacts에서 확인 가능\n' +
                  '- ✨ 코드 품질 점수와 상세 분석은 SonarCloud에서 확인하세요'
          })
