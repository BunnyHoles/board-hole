name: Develop Auto Versioning

on:
  push:
    branches: [ develop ]
  pull_request:
    types: [ closed ]
    branches: [ develop ]

jobs:
  auto-version:
    if: github.event_name == 'push' || (github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Get current version
        id: current_version
        run: |
          VERSION=$(grep "^version=" gradle.properties | cut -d'=' -f2)
          echo "Current version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Analyze commit message
        id: analyze
        run: |
          # PR Î®∏ÏßÄÏù∏ Í≤ΩÏö∞ PR Ï†úÎ™© ÏÇ¨Ïö©, ÏùºÎ∞ò Ìë∏ÏãúÏù∏ Í≤ΩÏö∞ Ïª§Î∞ã Î©îÏãúÏßÄ ÏÇ¨Ïö©
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            COMMIT_MSG="${{ github.event.pull_request.title }}"
          else
            COMMIT_MSG="${{ github.event.head_commit.message }}"
          fi
          
          echo "Commit message: $COMMIT_MSG"
          
          # Ïª§Î∞ã ÌÉÄÏûÖ Î∂ÑÏÑù
          if [[ "$COMMIT_MSG" == feat!* ]] || [[ "$COMMIT_MSG" == *"BREAKING CHANGE"* ]]; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif [[ "$COMMIT_MSG" == feat:* ]] || [[ "$COMMIT_MSG" == feature:* ]]; then
            echo "type=minor" >> $GITHUB_OUTPUT
          elif [[ "$COMMIT_MSG" == fix:* ]] || [[ "$COMMIT_MSG" == bugfix:* ]]; then
            echo "type=patch" >> $GITHUB_OUTPUT
          else
            echo "type=dev" >> $GITHUB_OUTPUT
          fi

      - name: Calculate next version
        id: next_version
        run: |
          CURRENT="${{ steps.current_version.outputs.version }}"
          TYPE="${{ steps.analyze.outputs.type }}"
          
          # ÌòÑÏû¨ Î≤ÑÏ†Ñ ÌååÏã±
          if [[ $CURRENT == *"-dev."* ]]; then
            BASE_VERSION=${CURRENT%-dev.*}
            DEV_NUM=${CURRENT##*-dev.}
          elif [[ $CURRENT == *"-SNAPSHOT"* ]]; then
            BASE_VERSION=${CURRENT%-SNAPSHOT}
            DEV_NUM=0
          else
            BASE_VERSION=$CURRENT
            DEV_NUM=0
          fi
          
          # Î≤ÑÏ†Ñ Ïª¥Ìè¨ÎÑåÌä∏ Ï∂îÏ∂ú
          IFS='.' read -r MAJOR MINOR PATCH <<< "$BASE_VERSION"
          
          # ÏÉà Î≤ÑÏ†Ñ Í≥ÑÏÇ∞
          case $TYPE in
            major)
              NEW_VERSION="$((MAJOR + 1)).0.0-dev.1"
              ;;
            minor)
              NEW_VERSION="${MAJOR}.$((MINOR + 1)).0-dev.1"
              ;;
            patch)
              NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))-dev.1"
              ;;
            dev)
              NEW_VERSION="${BASE_VERSION}-dev.$((DEV_NUM + 1))"
              ;;
          esac
          
          echo "Next version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update version in gradle.properties
        run: |
          sed -i "s/version=.*/version=${{ steps.next_version.outputs.version }}/" gradle.properties

      - name: Commit and push version update
        run: |
          git add gradle.properties
          git commit -m "chore: bump version to ${{ steps.next_version.outputs.version }} [skip ci]"
          git push origin develop

      - name: Create lightweight tag
        run: |
          TAG_NAME="dev-${{ steps.next_version.outputs.version }}"
          git tag $TAG_NAME
          git push origin $TAG_NAME

      - name: Summary
        run: |
          echo "## üì¶ Version Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Previous Version**: ${{ steps.current_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **New Version**: ${{ steps.next_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit Type**: ${{ steps.analyze.outputs.type }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag**: dev-${{ steps.next_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY