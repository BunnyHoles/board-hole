name: Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: simple
          
      - uses: actions/checkout@v5
        if: steps.release.outputs.release_created
        
      - name: Setup Java
        if: steps.release.outputs.release_created
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle
          
      - name: Build JAR
        if: steps.release.outputs.release_created
        run: |
          chmod +x gradlew
          ./gradlew clean build bootJar --no-daemon
          
      - name: Upload JAR to Release
        if: steps.release.outputs.release_created
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ steps.release.outputs.tag_name }} build/libs/*.jar --clobber
          
      - name: Set up Docker Buildx
        if: steps.release.outputs.release_created
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to GitHub Container Registry  
        if: steps.release.outputs.release_created
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push Docker image
        if: steps.release.outputs.release_created
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/boardhole:latest
            ghcr.io/${{ github.repository_owner }}/boardhole:${{ steps.release.outputs.tag_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max