# English messages (messages_en.properties)
# ========================================
# Exception Title Messages
# ========================================
exception.title.not-found=Resource Not Found
exception.title.conflict=Data Conflict
exception.title.duplicate-username=Duplicate Username
exception.title.duplicate-email=Duplicate Email
exception.title.unauthorized=Authentication Failed
exception.title.access-denied=Access Denied
exception.title.validation-failed=Validation Failed
exception.title.bad-request=Bad Request
exception.title.internal-error=Internal Server Error
exception.title.method-not-allowed=Method Not Allowed
exception.title.unsupported-media-type=Unsupported Media Type
exception.title.missing-parameter=Missing Required Parameter
exception.title.type-mismatch=Type Mismatch
# ========================================
# Error Messages
# ========================================
error.internal=An internal server error has occurred
error.invalid-json=Invalid JSON format
error.unsupported-media-type=Unsupported media type
error.method-not-allowed=HTTP method not supported
# ========================================
# Authentication Related
# ========================================
auth.login.required=Login required
auth.access.denied=Insufficient permissions
auth.invalid.credentials=Invalid username or password
auth.login.success=Successfully logged in
auth.logout.success=Successfully logged out
auth.signup.success=Registration completed
# ========================================
# User Related
# ========================================
user.not.found=User not found
user.duplicate.username=Username already in use
user.duplicate.email=Email already in use
user.profile.updated=Profile updated
user.deleted=Account deleted
# ========================================
# Board Related
# ========================================
board.not.found=Board not found
board.access.denied=No permission for this board
board.title.required=Title is required
board.content.required=Content is required
board.created=Board created
board.updated=Board updated
board.deleted=Board deleted
# ========================================
# Common Messages
# ========================================
common.success=Successfully processed
common.failure=An error occurred during processing
common.invalid.input=Invalid input
common.save.success=Saved successfully
common.delete.success=Deleted successfully
common.update.success=Updated successfully
# Log messages English
log.request.start=🌐 Request started: {0} {1} (IP: {2})
log.request.end=🏁 Request completed: {0} {1} [Status: {2}] ({3}ms)
log.user.init.start=👥 Default user account initialization started
log.user.admin.created=👑 Default admin account created: {0}
log.user.admin.exists=👑 Admin account already exists: {0}
log.user.regular.created=👤 Default user account created: {0}
log.user.regular.exists=👤 User account already exists: {0}
log.board.welcome.created=📋 Default welcome board created
# Authentication log messages English
log.auth.login-success=✅ Login success: user={0}, ID={1}
log.auth.login-failed=❌ Login failed: user={0}
log.auth.logout-success=👋 Logout completed: user ID={0}
# Default data messages
data.welcome.board.title=Welcome to Board Hole!
data.welcome.board.content=This is the first post. Feel free to browse and create your own posts!
# AOP log messages English
log.method.start=📥 Method started: {0}({1})
log.method.end=📤 Method completed: {0} ({1}ms)
log.method.error=❌ Method failed: {0} ({1}ms) - {2}
log.performance.warning=⚠️ Performance warning: {0} took {1}ms (exceeds threshold)
# Security log messages English
log.security.auth.attempt=🔐 Authentication attempt: {0} by {1}
log.security.auth.success=✅ Authentication success: {0} for {1}
log.security.auth.failure=🚨 Security event: {0} failed - {1} (IP: {2})
log.security.authorized.access=🛡️ Authorized access: {0} by {1}
# Sensitive data masking English (security enhanced)
mask.password=🔒[MASKED_PASSWORD]
mask.token=🎫[MASKED_TOKEN]
mask.secret=🔐[MASKED_SECRET]
mask.sensitive=🚫[MASKED_SENSITIVE]
mask.credential=🗝[MASKED_CREDENTIAL]
mask.key=🔑[MASKED_KEY]
# Exception messages (hardcoded ones)
error.auth.not-authenticated=User must be authenticated
error.auth.required=Authentication required
error.auth.invalid-principal=Invalid authentication principal
error.auth.not-logged-in=Not logged in
error.auth.invalid-credentials=Invalid username or password
error.auth.access-denied=Insufficient permissions
error.user.not-found.username=User not found: {0}
error.user.not-found.id=User not found with ID: {0}
error.board.not-found.id=Board not found with ID: {0}
error.user.username.already-exists=Username already exists
error.user.email.already-exists=Email already exists
error.user.password.current.mismatch=Current password does not match
error.user.password.confirm.mismatch=New password and confirm password do not match
error.user.email.verification.invalid=Invalid or expired verification code
# Validation messages (consolidated)

# Standard Bean Validation defaults (English)
jakarta.validation.constraints.Null.message=must be null
jakarta.validation.constraints.NotNull.message=is required
jakarta.validation.constraints.AssertTrue.message=must be true
jakarta.validation.constraints.AssertFalse.message=must be false
jakarta.validation.constraints.NotEmpty.message=cannot be empty
jakarta.validation.constraints.NotBlank.message=cannot be blank
jakarta.validation.constraints.Size.message=size must be between {min} and {max}
jakarta.validation.constraints.Pattern.message=must match the pattern
jakarta.validation.constraints.Email.message=must be a well-formed email address
jakarta.validation.constraints.Min.message=must be greater than or equal to {value}
jakarta.validation.constraints.Max.message=must be less than or equal to {value}
jakarta.validation.constraints.DecimalMin.message=must be greater than or equal to {value}
jakarta.validation.constraints.DecimalMax.message=must be less than or equal to {value}
jakarta.validation.constraints.Positive.message=must be positive
jakarta.validation.constraints.PositiveOrZero.message=must be greater than or equal to 0
jakarta.validation.constraints.Negative.message=must be negative
jakarta.validation.constraints.NegativeOrZero.message=must be less than or equal to 0
jakarta.validation.constraints.Digits.message=numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
jakarta.validation.constraints.Past.message=must be a past date
jakarta.validation.constraints.PastOrPresent.message=must be a date in the past or in the present
jakarta.validation.constraints.Future.message=must be a future date
jakarta.validation.constraints.FutureOrPresent.message=must be a date in the present or in the future

# User validation
validation.user.username.required=Please enter username
validation.user.username.size=Username must be between 3 and 20 characters
validation.user.username.invalid=Invalid username
validation.user.password.required=Please enter password
validation.user.password.size=Password must be between 8 and 100 characters
validation.user.password.pattern=Password must contain uppercase, lowercase, numbers, and special characters
validation.user.password.invalid=Invalid password
validation.user.password.current.required=Please enter current password
validation.user.password.confirm.required=Please enter password confirmation
validation.user.name.required=Please enter name
validation.user.name.size=Name must be between 1 and 50 characters
validation.user.name.invalid=Invalid name
validation.user.email.required=Please enter email
validation.user.email.format=Please enter a valid email format
validation.user.email.size=Email cannot exceed 255 characters
validation.user.email.invalid=Invalid email
validation.user.username.too-long=Username is too long (max {0} characters)
validation.user.username.too-short=Username is too short (min {0} characters)
validation.user.name.too-long=Name is too long (max {0} characters)
validation.user.name.too-short=Name is too short (min {0} character)
validation.user.password.too-short=Password is too short (min {0} characters)
validation.user.password.too-long=Password is too long (max {0} characters)
validation.user.email.too-long=Email is too long (max {0} characters)

# Board validation
validation.board.title.required=Title is required
validation.board.title.size=Title cannot exceed 200 characters
validation.board.title.too-long=Title is too long (max {0} characters)
validation.board.title.invalid=Invalid title
validation.board.content.required=Content is required
validation.board.content.size=Content cannot exceed 10,000 characters
validation.board.content.too-long=Content is too long (max {0} characters)
validation.board.content.invalid=Invalid content
validation.board.author.required=Author is required

# Email verification (dot notation)
validation.email.verification.code.required=Email verification code is required
validation.email.verification.userId.required=User ID is required
validation.email.verification.newEmail.required=Please enter new email
validation.email.verification.expiresAt.required=Expiration time is required
validation.email.verification.already-used=Verification code already used
validation.email.verification.expired=Verification code expired
validation.email.verification.type.required=Verification type is required

# Common ID/reference
validation.user.userId.required=User ID is required
validation.user.userId.positive=User ID must be positive
validation.board.boardId.required=Board ID is required
validation.board.boardId.positive=Board ID must be positive
validation.board.authorId.required=Author ID is required
validation.board.authorId.positive=Author ID must be positive
# Detailed error messages
error.method-not-allowed.detail=HTTP method not supported. Supported methods: {0}
error.missing-parameter.detail=Required parameter missing: {0}
error.type-mismatch.detail=Invalid parameter type: {0}
error.validation-failed=Validation failed
# Session log messages
log.session.invalidated.user={1} sessions invalidated for user {0}
log.session.invalidated.single=Session {0} has been invalidated
log.session.ttl.extended=Session {0} TTL extended by {1} seconds
# User log messages
log.user.created=User created: username={0}, email={1}
log.user.updated=User updated: username={0}
log.user.deleted=User deleted: username={0}
log.user.password.change.failed=Password change failed - current password mismatch: userId={0}
log.user.password.changed=Password changed successfully: userId={0}, username={1}
log.user.email.change.failed=Email change request failed - current password mismatch: userId={0}
log.user.email.verification.requested=Email change verification requested: userId={0}, currentEmail={1}, newEmail={2}
log.user.email.changed=Email changed successfully: userId={0}, oldEmail={1}, newEmail={2}
# Board log messages
log.board.created=Board created: ID={0}, title={1}, author={2}
log.board.updated=Board updated: ID={0}, title={1}, author={2}
log.board.deleted=Board deleted: ID={0}, author={1}
log.board.view-count-increased=Board viewed: ID={0}, new count={1}# Information messages
info.user.email.verification.sent=Email verification code has been sent
